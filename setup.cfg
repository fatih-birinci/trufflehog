[flake8]
format = pylint
exclude = .svc,CVS,.bzr,.hg,.git,__pycache__,venv
max-complexity = 10
max-line-length = 79
ignore = NONE

# flake8-tidy-imports rules
banned-modules =
  dateutil.parser = Use `ciso8601` instead
  flask.ext.restful = Use `flask_restful`
  flask.ext.script = Use `flask_script`
  haversine = Use `from fast_distance import haversine`
  logging = Use `from lyft_logging import logging`
  lyft.api_client = Use `lyft_requests`
  lyft.gevent = Use `gevent`
  lyft.logging = Use `from lyft_logging import logging`
  lyft.logging.to_log = Use kv= log syntax
  lyft.mixins.Statsable = Use `lyft_stats.mixin.Statsable`
  lyft.regions_client = Use `lyft_regions_client`
  lyft.requests = Use `lyft_requests`
  lyft.settings = Use `lyft_settings`
  lyft.stats = Use `lyft_stats`
  py.test = Use `pytest`
  python-s3file = Use `boto`

[pep8]
max-line-length = 79

[tool:pytest]
addopts = --cov=truffleHog --cov-fail-under=100 --cov-report=term-missing:skip-covered --cov-report=xml --cov-report=html -vvv

[coverage:run]
branch = True

[coverage:xml]
output = build/coverage.xml

[coverage:html]
directory = build/coverage_html

[mypy]
python_version = 2.7
disallow_untyped_defs = True
ignore_missing_imports = True
strict_optional = True
warn_no_return = True
